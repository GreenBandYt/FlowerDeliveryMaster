# bot/handlers/common.py

from prettytable import PrettyTable
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from telegram.ext import (ContextTypes, CommandHandler, ConversationHandler,
                          MessageHandler, filters)
from users.models import CustomUser
from bot.keyboards.customer_keyboards import customer_keyboard
from asgiref.sync import sync_to_async
from django.db.utils import IntegrityError
import re
import logging

from bot.keyboards.admin_keyboards import admin_keyboard
from bot.keyboards.staff_keyboards import staff_keyboard
from bot.keyboards.customer_keyboards import customer_keyboard

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
USERNAME, PASSWORD, PHONE, ADDRESS = range(4)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ —Ä–æ–ª–∏
    –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏.
    """
    telegram_id = update.effective_user.id

    try:
        user = await sync_to_async(CustomUser.objects.get)(telegram_id=telegram_id)

        if user.is_superuser:
            await update.message.reply_text(
                f"üëë –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.username} (–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)!\n"
                "üíª –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                "üìä /analytics - –ü—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∞–ª–∏—Ç–∏–∫–∏\n"
                "üë• /manage_users - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\n"
                "üì¶ /orders - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏\n"
                "‚ÑπÔ∏è /admin_help - –ü–æ–º–æ—â—å",
                reply_markup=admin_keyboard
            )
        elif user.is_staff:
            await update.message.reply_text(
                f"üõ†Ô∏è –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.username} (–°–æ—Ç—Ä—É–¥–Ω–∏–∫)!\n"
                "üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                "üì¶ /my_orders - –¢–µ–∫—É—â–∏–µ –∑–∞–∫–∞–∑—ã\n"
                "üîÑ /update_status - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–æ–≤\n"
                "‚ÑπÔ∏è /look_help - –ü–æ–º–æ—â—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å",
                reply_markup=staff_keyboard
            )
        else:
            # –î–ª—è –∫–ª–∏–µ–Ω—Ç–∞
            customer_keyboard = ReplyKeyboardMarkup(
                [["üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã", "üõí –ö–æ—Ä–∑–∏–Ω–∞", "üõçÔ∏è –ö–∞—Ç–∞–ª–æ–≥", "‚ÑπÔ∏è –ü–æ–º–æ—â—å –ø–æ–∫–∞–∑–∞—Ç—å"]],
                resize_keyboard=True,
                one_time_keyboard=False
            )
            await update.message.reply_text(
                f"üå∏ –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.username} (–ö–ª–∏–µ–Ω—Ç)!\n"
                "üéâ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                "üì¶ /view_orders - –ú–æ–∏ –∑–∞–∫–∞–∑—ã\n"
                "üõí /view_cart - –ö–æ—Ä–∑–∏–Ω–∞\n"
                "üõçÔ∏è /view_catalog - –ö–∞—Ç–∞–ª–æ–≥\n"
                "‚ÑπÔ∏è /show_help - –ü–æ–º–æ—â—å –ø–æ–∫–∞–∑–∞—Ç—å",
                reply_markup=customer_keyboard
            )

    except CustomUser.DoesNotExist:
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞
        keyboard = ReplyKeyboardMarkup(
            [["üîó –ü—Ä–∏–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç", "üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"], ["‚ÑπÔ∏è –ü–æ–º–æ—â—å"]],
            resize_keyboard=True,
            one_time_keyboard=True
        )
        await update.message.reply_text(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É!\n"
            "–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω.\n\n"
            "üîó –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /link –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.\n"
            "üìù –ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ /register —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç.\n"
            "‚ÑπÔ∏è –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /show_help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏.",
            reply_markup=keyboard
        )

async def link(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç Telegram –∞–∫–∫–∞—É–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –ª–æ–≥–∏–Ω—É –≤ —Å–∏—Å—Ç–µ–º–µ.
    """
    if len(context.args) != 1:
        await update.message.reply_text("‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –ª–æ–≥–∏–Ω. –ü—Ä–∏–º–µ—Ä: /link your_username")
        return

    username = context.args[0]
    telegram_id = update.effective_user.id

    if not re.match(r"^\w{3,}$", username):
        await update.message.reply_text("‚ùå –õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –º–∏–Ω–∏–º—É–º –∏–∑ 3 —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return

    try:
        user = await sync_to_async(CustomUser.objects.get)(username=username)

        if user.telegram_id and user.telegram_id != telegram_id:
            await update.message.reply_text(
                "‚ö†Ô∏è –≠—Ç–æ—Ç –ª–æ–≥–∏–Ω —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –¥—Ä—É–≥–æ–º—É Telegram –∞–∫–∫–∞—É–Ω—Ç—É."
            )
            return

        user.telegram_id = telegram_id
        await sync_to_async(user.save)()

        await update.message.reply_text(
            f"‚úÖ Telegram —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –ª–æ–≥–∏–Ω—É {username}."
        )
    except CustomUser.DoesNotExist:
        await update.message.reply_text("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –ª–æ–≥–∏–Ω–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.")

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.
    """
    await update.message.reply_text("üö´ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
    return ConversationHandler.END

def get_registration_handler():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç ConversationHandler –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    return ConversationHandler(
        entry_points=[CommandHandler("register", register)],
        states={
            USERNAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_username)],
            PASSWORD: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_password)],
            PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_phone)],
            ADDRESS: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_address)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

async def register(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
    """
    await update.message.reply_text(
        "üìù –í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:"
    )
    return USERNAME

async def get_username(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
    """
    username = update.message.text

    if username.lower() == "–æ—Ç–º–µ–Ω–∞":
        await update.message.reply_text("üö´ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        return ConversationHandler.END

    context.user_data['username'] = username
    await update.message.reply_text("üîí –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:")
    return PASSWORD

async def get_password(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
    """
    password = update.message.text
    context.user_data['password'] = password
    await update.message.reply_text("üìû –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    return PHONE

async def get_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
    """
    phone = update.message.text
    context.user_data['phone'] = phone

    phone_pattern = r'^\+7\(\d{3}\)\d{3}-\d{2}-\d{2}$'
    if not re.match(phone_pattern, phone):
        await update.message.reply_text(
            "‚ùå –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ +7(XXX)XXX-XX-XX."
        )
        return PHONE

    await update.message.reply_text("üè† –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å:")
    return ADDRESS

async def get_address(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
    """
    address = update.message.text
    user_data = context.user_data

    try:
        user = await sync_to_async(CustomUser.objects.create_user)(
            username=user_data['username'],
            password=user_data['password'],
            telegram_id=update.effective_user.id,
            phone_number=user_data['phone'],
            address=address,
        )
        await sync_to_async(user.save)()
        await update.message.reply_text("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
    except IntegrityError:
        await update.message.reply_text("‚ùå –¢–∞–∫–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
    except Exception as e:
        await update.message.reply_text(f"‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

    return ConversationHandler.END


async def admin_help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
    """
    await update.message.reply_text(
        "üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∞—è –ø–æ–º–æ—â—å:\n"
        "üìä /analytics - –ü—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∞–ª–∏—Ç–∏–∫–∏\n"
        "üë• /manage_users - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\n"
        "üì¶ /orders - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏\n"
        "‚ÑπÔ∏è /help - –ü–æ–º–æ—â—å"
    )

async def look_help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /look_help –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.
    """
    await update.message.reply_text(
        "üõ†Ô∏è –ü–æ–º–æ—â—å –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:\n"
        "üì¶ /my_orders - –¢–µ–∫—É—â–∏–µ –∑–∞–∫–∞–∑—ã\n"
        "üîÑ /update_status - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–æ–≤\n"
        "‚ÑπÔ∏è /look_help - –ü–æ–º–æ—â—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å"
    )

async def show_help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /show_help –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞.
    """
    await update.message.reply_text(
        "üå∏ –ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è –ø–æ–º–æ—â—å:\n"
        "üì¶ /view_orders - –ú–æ–∏ –∑–∞–∫–∞–∑—ã\n"
        "üõí /view_cart - –ö–æ—Ä–∑–∏–Ω–∞\n"
        "üõçÔ∏è /view_catalog - –ö–∞—Ç–∞–ª–æ–≥\n"
        "‚ÑπÔ∏è /show_help - –ü–æ–º–æ—â—å –ø–æ–∫–∞–∑–∞—Ç—å"
    )


